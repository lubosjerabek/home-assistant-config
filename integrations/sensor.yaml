- platform: rest
  name: tado_weather
  verify_ssl: true
  scan_interval: 1800
  resource: !secret tado_weather_api
  headers:
    User-Agent: Home Assistant
    Content-Type: application/json
  method: GET
  json_attributes:
    - roomMessages
    - outdoorQuality
  value_template: 'Tado Weather Data'

- platform: template
  sensors:
    sunset_time:
      value_template: '{% set timestamp = as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom("%I:%M") %} {{ timestamp.lstrip("0") }}'
      friendly_name: "Next setting"
    sunrise_time:
      value_template: '{% set timestamp = as_timestamp(states.sun.sun.attributes.next_rising) | timestamp_custom("%I:%M") %} {{ timestamp.lstrip("0") }}'
      friendly_name: "Next rising"
    washer_status:
      friendly_name: "Washing Machine"
      value_template: >
        {% set washer_state = states('sensor.washing_machine_washer_job_state') %}
        {% set off_states = ["none", "finish"] %}
        {%- if washer_state in off_states -%}Off
        {%- elif washer_state == "weightSensing" -%}Weighing
        {%- elif washer_state == "delayWash" -%}Delay
        {%- elif washer_state == "rinse" -%}Rinsing
        {%- elif washer_state == "spin" -%}Spinning
        {%- elif washer_state == "wash" -%}Washing
        {%- else -%}{{ washer_state }}
        {%- endif %}
    washer_eta:
      friendly_name: "Completion Time Estimate"
      value_template: >
        {% set washer_state = states('sensor.washer_status') %}
        {%- if washer_state == "Off" -%}None
        {%- else -%}{{ as_timestamp(strptime(states('sensor.washing_machine_washer_completion_time'), "")) | timestamp_custom("%H:%M") }}
        {%- endif %}
    doorbell_last_triggered:
      friendly_name: "Doorbell pressed"
      value_template: >
        {% set date = strptime(states.automation.doorbell.attributes.last_triggered, '') %}
        {%- if date.date() != now().date() -%}Not today
        {%- else -%}{{ as_timestamp(date) | timestamp_custom('%H:%M') }}
        {%- endif %}
    office_aqi:
      friendly_name: "Office Air Quality"
      value_template: '{{ states.fan.office_purifier.attributes.aqi }}'
      unit_of_measurement: 'PM'
    bedroom_aqi:
      friendly_name: "Bedroom Air Quality"
      value_template: '{{ states.fan.bedroom_purifier.attributes.aqi }}'
      unit_of_measurement: 'PM'

    # Pollen sensors
    air_pollen_level:
      value_template: '{{ states.sensor.tadoair.attributes["outdoorQuality"]["pollens"]["dominant"]["level"]  | capitalize }}'
      friendly_name: "Pollen Level"
      icon_template: mdi:flower

    air_pollen_level_grass:
      value_template: '{{ states.sensor.tadoair.attributes["outdoorQuality"]["pollens"]["types"][0]["forecast"][0]["level"] | capitalize }}'
      friendly_name: "Pollen Level Grass"
      icon_template: mdi:flower

    air_pollen_level_grass_tomorrow:
      value_template: '{{ states.sensor.tadoair.attributes["outdoorQuality"]["pollens"]["types"][0]["forecast"][1]["level"] | capitalize  }}'
      friendly_name: "Pollen Level Grass Tomorrow"
      icon_template: mdi:flower

    air_pollen_level_weed:
      value_template: '{{ states.sensor.tadoair.attributes["outdoorQuality"]["pollens"]["types"][1]["forecast"][0]["level"] | capitalize  }}'
      friendly_name: "Pollen Level Weed"
      icon_template: mdi:sprout

    air_pollen_level_weed_tomorrow:
      value_template: '{{ states.sensor.tadoair.attributes["outdoorQuality"]["pollens"]["types"][1]["forecast"][1]["level"] | capitalize  }}'
      friendly_name: "Pollen Level Weed Tomorrow"
      icon_template: mdi:sprout

    air_pollen_level_tree:
      value_template: '{{ states.sensor.tadoair.attributes["outdoorQuality"]["pollens"]["types"][2]["forecast"][0]["level"] | capitalize  }}'
      friendly_name: "Pollen Level Tree"
      icon_template: mdi:tree

    air_pollen_level_tree_tomorrow:
      value_template: '{{ states.sensor.tadoair.attributes["outdoorQuality"]["pollens"]["types"][2]["forecast"][1]["level"]  | capitalize }}'
      friendly_name: "Pollen Level Tree Tomorrow"
      icon_template: mdi:tree
