- alias: Notify washing machine state changes
  trigger:
    platform: state
    entity_id: sensor.washer_status
  condition:
    - condition: template
      value_template: >
        {{ trigger.to_state.state != "Weighing" and
          trigger.to_state.state != "Delay" and
          trigger.to_state.state != unknown and
          trigger.from_state.state != unknown and
          trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: script.notify_washer_state

- alias: Notify garbage collection
  trigger:
    platform: state
    entity_id: person.janca, person.lubos
    to: 'home'
  condition:
    - condition: template
      value_template: >
        {{ trigger.to_state.state is not none and
          trigger.from_state.state is not none and
          trigger.to_state.state != trigger.from_state.state }}
    - condition: template
      value_template: >
        {{
          is_state("sensor.general_rubbish", "tomorrow") or
          is_state("sensor.recycling_waste", "tomorrow") or
          is_state("sensor.garden_waste", "tomorrow")
        }}
  action:
      - service: script.notify_garbage

- alias: Notify zone changes
  trigger:
    platform: state
    entity_id: person.janca, person.lubos
  condition:
    - condition: template
      value_template: >
        {{ trigger.to_state.state is not none and
          trigger.from_state.state is not none and
          trigger.to_state.state != trigger.from_state.state }}
    - condition: template
      value_template: >
        {% set zones = states.zone | map(attribute='name')|list %}
        {{trigger.to_state.state in ['home','not_home'] or
          trigger.from_state.state in ['home','not_home'] or
          trigger.to_state.state in zones or 
          trigger.from_state.state in zones}}
  action:
    - service: script.notify_presence
      data_template:
        trigger: Presence tracking
        entityid: '{{trigger.entity_id}}'
        tostate: '{{trigger.to_state.state}}'
        fromstate: '{{trigger.from_state.state}}'

