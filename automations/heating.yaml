- alias: Heating - Night
  trigger:
    platform: time
    at: input_datetime.heating_off
  condition:
    - condition: state
      entity_id: group.everyone
      state: home
  action:
    - service: script.heating_night

- alias: Heating - Everyone Leaves
  trigger:
    - platform: state
      entity_id: group.everyone
      from: 'home'
      to: 'not_home'
  action:
    - service: script.heating_away

- alias: Heating - Someone Arrives Home
  trigger:
    platform: state
    entity_id: person.jana, person.lubos
    to: 'home'
  action:
    - service: script.heating_back

- alias: Heating - Morning
  trigger:
    platform: time
    at: input_datetime.morning
  condition:
    - condition: state
      entity_id: group.everyone
      state: home
  action:
    - service: script.heating_morning

- alias: Heating - Close to home
  trigger:
    - platform: zone
      entity_id: person.jana, person.lubos
      zone: zone.extended_home
      event: enter
  action:
    - service: script.heating_close

- alias: Heating - Restart Tado bridge when service goes down
  trigger:
    platform: state
    entity_id:
      - binary_sensor.living_room_link
      - binary_sensor.bedroom_link
      - binary_sensor.kitchen_link
      - binary_sensor.office_link
      - binary_sensor.loft_link
    from: 'on'
    to: 'off'
  action:
    - service: script.restart_tado

- alias: Heating - Bedrooms On
  trigger:
    platform: time
    at: "21:00:00"
  condition:
    - condition: state
      entity_id: group.everyone
      state: home
  action:
    - service: script.heating_bedrooms

# - alias: Heating - Kids Room
#   trigger:
#     platform: time
#     at:
#       - "07:00:00"
#       - "10:00:00"
#       - "19:00:00"
#   condition:
#     - condition: state
#       entity_id: group.everyone
#       state: home
#   action:
#     - if:
#         - condition: time
#           after: "07:00:00"
#           before: "10:00:00"
#       then:
#         - service: climate.turn_off
#           entity_id: climate.kids_room
#     - if:
#         - condition: time
#           after: "10:00:00"
#           before: "19:00:00"
#       then:
#         - service: climate.set_temperature
#           entity_id: climate.kids_room
#           data:
#             temperature: 20
#     - if:
#         - condition: time
#           after: "19:00:00"
#           before: "07:00:00"
#       then:
#         - service: climate.set_temperature
#           entity_id: climate.kids_room
#           data:
#             temperature: 19

- alias: Heating - Preheating On
  trigger:
    platform: time
    at: "03:00:00"
  condition:
    - condition: state
      entity_id: group.everyone
      state: home
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.preheating

- alias: Heating - Refresh Start Time
  trigger:
  - minutes: /5
    platform: time_pattern
  condition:
    condition: state
    entity_id: input_boolean.preheating
    state: 'on'
  action:
    - service: script.refresh_early_morning_timer

- alias: Heating - Periodic Check For Start
  trigger:
  - minutes: /1
    platform: time_pattern
  condition:
    - condition: template
      value_template: >
        {% set time = states('input_datetime.heating_on')%}
        {% set now = now().strftime("%H:%M:%S") %}
        {{ now >= time and is_state('input_boolean.preheating', 'on') }}
  action:
    - service: script.heating_early_morning
