set_thermostat:
  sequence:
    - condition: state
      entity_id: input_boolean.heating
      state: "on"
    - service: climate.set_preset_mode
      data:
        entity_id: "{{ entity_id }}"
        preset_mode: home
    - service: climate.set_temperature
      data_template:
        entity_id: "{{ entity_id }}"
        temperature: "{{ temperature }}"

heating_early_morning:
  sequence:
    - service: script.set_thermostat
      data:
        entity_id: climate.living_room
        temperature: 20
    - service: script.set_thermostat
      data:
        entity_id: climate.bedroom
        temperature: 19

heating_morning:
  sequence:
    - service: script.refresh_morning_timer
    - service: script.set_thermostat
      data:
        entity_id: climate.living_room
        temperature: 20
    - service: script.set_thermostat
      data:
        entity_id: climate.kitchen
        temperature: 19
    - service: climate.turn_off
      entity_id: climate.bedroom
    - condition: state
      entity_id: binary_sensor.workday_today
      state: 'on'
    - service: script.set_thermostat
      data:
        entity_id: climate.office
        temperature: 20

heating_work:
  sequence:
    - service: script.set_thermostat
      data:
        entity_id: climate.living_room
        temperature: 19
    - service: script.set_thermostat
      data:
        entity_id: climate.office
        temperature: 20
    - service: climate.turn_off
      entity_id:
          - climate.kitchen
          - climate.bedroom
          - climate.loft

heating_away:
  sequence:
    - service: climate.set_preset_mode
      data:
        entity_id: climate.living_room
        preset_mode: away
    - service: climate.set_temperature
      data_template:
        entity_id: climate.living_room
        temperature: 16
    - service: climate.turn_off
      entity_id:
          - climate.kitchen
          - climate.bedroom
          - climate.office
          - climate.loft

heating_close:
  sequence:
    - service: script.set_thermostat
      data:
        entity_id: climate.living_room
        temperature: 20

heating_back:
  sequence:
    - service: script.set_thermostat
      data:
        entity_id: climate.living_room
        temperature: 20.5
    - service: script.set_thermostat
      data:
        entity_id: climate.kitchen
        temperature: 19
    - service: script.set_thermostat
      data:
        entity_id: climate.bedroom
        temperature: 20

heating_night:
  sequence:
    - service: script.refresh_heating_off_timer
    - service: script.set_thermostat
      data:
        entity_id: climate.living_room
        temperature: 16
    - service: script.set_thermostat
      data:
        entity_id: climate.bedroom
        temperature: 18
    - service: climate.turn_off
      entity_id:
          - climate.kitchen
          - climate.office
    - condition: state
      entity_id: input_boolean.heating
      state: "off"
    - service: notify.mobile_app_mi10t_pro
      data:
        title: Home Assistant
        message: Test
    - service: climate.turn_off
      entity_id:
          - climate.living_room
          - climate.bedroom

refresh_early_morning_timer:
  sequence:
    - service: input_datetime.set_datetime
      target:
        entity_id: input_datetime.heating_on
      data:
        time: >
          {% set temp = states('sensor.living_room_temperature') %}  
          {% set target = 20 %}
          {% set speed = 30 %}
          {{ (((state_attr('input_datetime.morning' , 'timestamp')) - ((target - float(temp)) * speed * 60))|timestamp_custom('%H:%M', false)) }}

refresh_morning_timer:
  sequence:
    - service: input_datetime.set_datetime
      target:
        entity_id: input_datetime.morning
      data:
        time: "{{ '07:00' if is_state('binary_sensor.workday_tomorrow', 'on') else '08:00' }}"

refresh_heating_off_timer:
  sequence:
    - service: input_datetime.set_datetime
      target:
        entity_id: input_datetime.heating_off
      data:
        time: "22:30"
