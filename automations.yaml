- alias: Heating off every night
  trigger:
    platform: time
    at: '22:30:00'
  action:
    - service: script.heating_night

- alias: Heating on every morning
  trigger:
    platform: time
    at: '6:30:00'
  action:
    - delay: "{{ '00:00:00' if is_state('binary_sensor.workday_sensor', 'on') else '02:00:00' }}"
    - service: script.heating_morning

- alias: Back home
  trigger:
    - platform: state
      entity_id: group.everyone
      from: 'not_home'
      to: 'home'
  action:
    - service: script.back_home

- alias: Leave home
  trigger:
    - platform: state
      entity_id: group.everyone
      from: 'home'
      to: 'not_home'
  action:
    - service: script.leave_home

- alias: Notify zone changes
  trigger:
    platform: state
    entity_id: person.janca, person.lubos
  condition:
    - condition: template
      value_template: >
        {{ trigger.to_state.state is not none and
          trigger.from_state.state is not none and
          trigger.to_state.state != trigger.from_state.state }}
    - condition: template
      value_template: >
        {% set zones = states.zone | map(attribute='name')|list %}
        {{trigger.to_state.state in ['home','not_home'] or
          trigger.from_state.state in ['home','not_home'] or
          trigger.to_state.state in zones or 
          trigger.from_state.state in zones}}
  action:
    - service: script.notify_presence
      data_template:
        trigger: Presence tracking
        entityid: '{{trigger.entity_id}}'
        tostate: '{{trigger.to_state.state}}'
        fromstate: '{{trigger.from_state.state}}'

- alias: Notify garbage collection
  trigger:
    platform: state
    entity_id: person.janca, person.lubos
    to: 'home'
  condition:
    - condition: template
      value_template: >
        {{ trigger.to_state.state is not none and
          trigger.from_state.state is not none and
          trigger.to_state.state != trigger.from_state.state }}
    - condition: template
      value_template: >
        {{
          is_state("sensor.general_rubbish", "tomorrow") or
          is_state("sensor.recycling_waste", "tomorrow") or
          is_state("sensor.garden_waste", "tomorrow")
        }}
  action:
      - service: script.notify_garbage

- alias: Heating off when window open
  trigger:
    platform: state
    entity_id:
      - sensor.living_room_open_window
      - sensor.bedroom_open_window
      - sensor.kitchen_open_window
      - sensor.study_open_window
      - sensor.loft_open_window
    from: 'False'
    to: 'True'
  action:
    - service: script.notify_heating_off
      data_template:
        entityid: '{{trigger.entity_id}}'

- alias: Gateway light on
  trigger:
    platform: numeric_state
    entity_id: sensor.xiaomi_gateway_illuminance
    below: 450
  action:
    - service: light.turn_on
      data:
        entity_id: light.xiaomi_gateway_light
        color_name: azure

- alias: Gateway light off
  trigger:
    platform: numeric_state
    entity_id: sensor.xiaomi_gateway_illuminance
    above: 600
  action:
    service: light.turn_off
    entity_id: light.xiaomi_gateway_light

- alias: Play radio
  trigger:
    - platform: state
      entity_id: input_select.play_radio
      from: 'Select radio'
  action:
    - service: script.play_radio
    - service: input_select.select_option
      data:
        entity_id: input_select.play_radio
        option: 'Select radio'

- alias: Doorbell
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.switch_158d0001a21126
      click_type: single
  action:
    - service: script.doorbell

- alias: Ambilight on when lights turn off
  trigger:
    - platform: state
      entity_id: group.living_room_lights
      from: 'on'
      to: 'off'
  condition:
    condition: numeric_state
    entity_id: sensor.xiaomi_gateway_illuminance
    below: 600
  action:
    - service: script.ambilight_on

- alias: Ambilight off when lights turn on
  trigger:
    - platform: state
      entity_id: group.living_room_lights
      from: 'off'
      to: 'on'
  action:
    - service: script.ambilight_off

- alias: Notify washing machine state changes
  trigger:
    platform: state
    entity_id: sensor.washer_status
  condition:
    - condition: template
      value_template: >
        {{ trigger.to_state.state != "Weighing" and
          trigger.to_state.state != "Delay" and
          trigger.to_state.state != unknown and
          trigger.from_state.state != unknown and
          trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: script.notify_washer_state

- alias: Notify proximity
  trigger:
    - platform: zone
      entity_id: person.janca
      zone: zone.extended_home
      event: enter
  action:
    - service: notify.mobile_app_iphone
      data:
        title: Home Assistant
        message: Extended zone activated
