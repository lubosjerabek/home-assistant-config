leave_home:
  sequence:
    - service: script.heating_away
    - service: automation.turn_off
      entity_id:
    #     - automation.bathroom_light_on
    #     - automation.cupboard_light_on
    #     - automation.gateway_light_on
    #     - automation.kitchen_lights_on
    #     - automation.turn_on_speaker_when_chromecast_is_playing
    #     - automation.turn_on_speaker_when_kodi_is_playing
        - automation.heating_on_every_morning
    # - service: automation.turn_on
    #   entity_id:
    #     - automation.hall_light_on_when_door_opens
    #     - automation.hall_light_off_after_door_closes
    #     - automation.purifiers_off_when_cleanup_done
    #     - automation.notify_when_door_opens
    # - service: light.turn_off
    #   data:
    #     entity_id:
    #       - group.kitchen_lights
    #       - group.living_room_lights
    #       - group.other_lights
    # - service: media_player.turn_off
    #   entity_id:
    #     - media_player.kodi
    #     - media_player.living_room_tv
    #     - media_player.tv_speaker
    #     - media_player.bedroom_speaker
    #     - media_player.kitchen_speaker
    #     - media_player.printer_speaker
    #     - media_player.desk_speaker
    # - service: fan.turn_on
    #   data:
    #     entity_id: group.purifiers
    - service: vacuum.set_fan_speed
      data:
        entity_id: vacuum.xiaomi_vacuum_cleaner
        fan_speed: standard
    - service: vacuum.start
      data:
        entity_id: vacuum.xiaomi_vacuum_cleaner

back_home:
  sequence:
    - service: script.heating_back
    - service: automation.turn_on
      entity_id:
    #     - automation.bathroom_light_on
    #     - automation.cupboard_light_on
    #     - automation.gateway_light_on
    #     - automation.kitchen_lights_on
    #     - automation.turn_on_speaker_when_chromecast_is_playing
    #     - automation.turn_on_speaker_when_kodi_is_playing
        - automation.heating_on_every_morning
    # - service: automation.turn_off
    #   entity_id:
    #     - automation.purifiers_off_when_cleanup_done
    #     - automation.notify_when_door_opens
    - service: vacuum.set_fan_speed
      data:
        entity_id: vacuum.xiaomi_vacuum_cleaner
        fan_speed: standard
    - service: vacuum.return_to_base
      entity_id:
        - vacuum.xiaomi_vacuum_cleaner
    # - service: kodi.call_method
    #   data:
    #     entity_id: media_player.kodi
    #     method: VideoLibrary.Scan
    # - service: fan.set_speed
    #   data:
    #     entity_id: group.purifiers
    #     speed: auto
    # - service: media_player.play_media
    #   data:
    #     entity_id: media_player.kitchen_speaker
    #     media_content_id: 'https://jerab.in/media/play_music.mp3'
    #     media_content_type: music

set_thermostat:
  sequence:
    - service: climate.set_preset_mode
      data:
        entity_id: "{{ entity_id }}"
        preset_mode: home
    - service: climate.set_temperature
      data_template:
        entity_id: "{{ entity_id }}"
        temperature: "{{ temperature }}"

heating_morning:
  sequence:
    - service: script.set_thermostat
      data:
        entity_id: climate.living_room
        temperature: 20
    - service: script.set_thermostat
      data:
        entity_id: climate.kitchen
        temperature: 19
    - service: climate.turn_off
      entity_id: climate.bedroom
    - service: script.set_thermostat
      data:
        entity_id: climate.study
        temperature: 20

heating_away:
  sequence:
    - service: climate.set_preset_mode
      data:
        entity_id: group.thermostats
        preset_mode: away
    - service: climate.set_temperature
      data_template:
        entity_id: group.thermostats
        temperature: 16
    - service: climate.turn_off
      entity_id: climate.loft

heating_close:
  sequence:
    - service: script.set_thermostat
      data:
        entity_id: climate.living_room
        temperature: 20
    - service: script.set_thermostat
      data:
        entity_id: climate.kitchen
        temperature: 19
    - service: script.set_thermostat
      data:
        entity_id: climate.bedroom
        temperature: 20
    - service: script.set_thermostat
      data:
        entity_id: climate.study
        temperature: 20

heating_back:
  sequence:
    - service: script.set_thermostat
      data:
        entity_id: climate.living_room
        temperature: 21
    - service: script.set_thermostat
      data:
        entity_id: climate.kitchen
        temperature: 19
    - service: script.set_thermostat
      data:
        entity_id: climate.bedroom
        temperature: 21
    - service: script.set_thermostat
      data:
        entity_id: climate.study
        temperature: 20

heating_night:
  sequence:
    - service: script.set_thermostat
      data:
        entity_id: climate.living_room
        temperature: 18
    - service: script.set_thermostat
      data:
        entity_id: climate.kitchen
        temperature: 18
    - service: script.set_thermostat
      data:
        entity_id: climate.bedroom
        temperature: 19
    - service: script.set_thermostat
      data:
        entity_id: climate.study
        temperature: 18

notify_presence:
  sequence:
    service: notify.notify
    data_template:
      title: Home Assistant
      message: >
        {% set name = states[entityid.split('.')[0]][entityid.split('.')[1]].name %}
        {% if tostate == 'not_home' %}
          {{-name }} left {{fromstate}}
        {% elif fromstate == 'not_home' %}
          {{-name }} arrived at {{tostate}}
        {% else %}
          {{-name }} left {{fromstate}} and arrived at {{tostate}}
        {% endif %}

notify_heating_off:
  sequence:
    - service: notify.notify
      data_template:
        title: Home Assistant
        message: >
          {% set name = states[entityid.split('.')[0]][entityid.split('.')[1]].name %}
            {{-name }} detected, turning the heating off
    - service: climate.turn_off
      data_template:
        entity_id: >
          {% if entityid == 'sensor.living_room_open_window' %}climate.living_room
          {% elif entityid == 'sensor.bedroom_open_window' %}climate.bedroom
          {% elif entityid == 'sensor.kitchen_open_window' %}climate.kitchen
          {% elif entityid == 'sensor.study_open_window' %}climate.study
          {% elif entityid == 'sensor.loft_open_window' %}climate.loft
          {% else %}none
          {% endif %}

vacuum_kitchen:
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.xiaomi_vacuum_cleaner
        command: app_zoned_clean
        params: [[22390,19943,24740,23143,1]]

play_radio:
  sequence:
    - service: media_player.play_media
      data_template:
        entity_id: media_player.downstairs_speakers
        media_content_type: channel
        media_content_id: >
          {% if is_state("input_select.play_radio", "Český rozhlas Radiožurnál") %}https://ice7.radia.cz/cro1-128.aac
          {% elif is_state("input_select.play_radio", "Rádio Krokodýl") %}http://icecast4.play.cz/krokodyl128.mp3
          {% else %}none
          {% endif %}

doorbell:
  sequence:
    - service: xiaomi_aqara.play_ringtone
      data:
        gw_mac: !secret xiaomi_gateway_mac
        ringtone_id: 10
        ringtone_vol: 60
    - service: notify.notify
      data:
        title: Home Assistant
        message: Someone's at the door

notify_garbage:
  sequence:
    service: notify.notify
    data_template:
      title: Home Assistant
      message: >
        {% set ns = namespace ( bins = "" ) %}
        {%- for entity_id in states.group.garbage_sensors.attributes.entity_id %}
          {%- set name = states[entity_id.split(".")[0]][ entity_id.split(".")[1]].name %}
          {%- set state = states[entity_id.split(".")[0]][ entity_id.split(".")[1]].state %}
            {%- if state == "Tomorrow" %}
              {%- set ns.bins = ns.bins ~ " and " ~ name %}
            {%- endif %}
        {%- endfor %}
        Take {{ ns.bins[5:].lower() }} out
